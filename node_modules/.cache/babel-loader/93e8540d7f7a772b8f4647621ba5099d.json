{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nexport const useFetch = function (url) {\n  _s();\n\n  let method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"GET\";\n  const [data, setData] = useState(null);\n  const [isLoading, setisLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [options, setOptions] = useState(null);\n\n  const postData = postData => {\n    setOptions({\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(postData) // turn js object into a json string for posting\n\n    });\n  };\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    const fetchData = async fetchOptions => {\n      setisLoading(true);\n\n      try {\n        const res = await fetch(url, { ...fetchOptions,\n          signal: controller.signal\n        });\n\n        if (!res.ok) {\n          throw new Error(res.statusText);\n        }\n\n        const data = await res.json();\n        setisLoading(false);\n        setData(data);\n        setError(null);\n      } catch (e) {\n        if (e.name === \"AbortError\") {\n          console.log(\"the fetch was aborted\");\n        } else {\n          setisLoading(false);\n          setError(\"failed to fetch the data\");\n        }\n      }\n    };\n\n    if (method === 'GET') {\n      fetchData();\n    }\n\n    if (method === \"POST\" && options) {\n      fetchData(options);\n    }\n\n    return () => {\n      controller.abort();\n    };\n  }, [url, method, options]);\n  return {\n    data,\n    isLoading,\n    error,\n    postData\n  };\n};\n\n_s(useFetch, \"Slo8v7jDGf4vXkRNmf7y/7rUdS8=\");","map":{"version":3,"names":["useState","useEffect","useFetch","url","method","data","setData","isLoading","setisLoading","error","setError","options","setOptions","postData","headers","body","JSON","stringify","controller","AbortController","fetchData","fetchOptions","res","fetch","signal","ok","Error","statusText","json","e","name","console","log","abort"],"sources":["/Users/zhubozhou/Documents/github/recipeee/src/hooks/useFetch.js"],"sourcesContent":["import {useState, useEffect} from 'react';\n\nexport const useFetch = (url, method = \"GET\") => {\n\n    const [data,setData] = useState(null)\n    const [isLoading, setisLoading] = useState(false)\n    const [error, setError] = useState(null)\n    const [options, setOptions] = useState(null)\n\n    const postData = (postData) => {\n        setOptions({\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(postData) // turn js object into a json string for posting\n        })\n    }\n\n    useEffect(() => {\n        const controller = new AbortController()\n        const fetchData = async(fetchOptions) => {\n            setisLoading(true)\n            try {\n                const res = await fetch(url, {...fetchOptions, signal: controller.signal})\n                if (!res.ok) {\n                    throw new Error(res.statusText)\n                }\n                const data = await res.json()\n                setisLoading(false)\n                setData(data)\n                setError(null)\n            }\n            catch (e) {\n                if (e.name === \"AbortError\") {\n                    console.log(\"the fetch was aborted\")\n                }\n                else {\n                    setisLoading(false)\n                    setError(\"failed to fetch the data\")\n                }\n            }\n        }\n        if (method === 'GET') {\n            fetchData()\n        }\n        if (method === \"POST\" && options) {\n            fetchData(options)\n        }\n        \n        return () => {controller.abort()}\n    }, [url, method, options])\n    \n    return {data, isLoading, error, postData}\n}\n"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAEA,OAAO,MAAMC,QAAQ,GAAG,UAACC,GAAD,EAAyB;EAAA;;EAAA,IAAnBC,MAAmB,uEAAV,KAAU;EAE7C,MAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBN,QAAQ,CAAC,IAAD,CAA/B;EACA,MAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;EACA,MAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;;EAEA,MAAMa,QAAQ,GAAIA,QAAD,IAAc;IAC3BD,UAAU,CAAC;MACPR,MAAM,EAAE,MADD;MAEPU,OAAO,EAAE;QACL,gBAAgB;MADX,CAFF;MAKPC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CALC,CAKwB;;IALxB,CAAD,CAAV;EAOH,CARD;;EAUAZ,SAAS,CAAC,MAAM;IACZ,MAAMiB,UAAU,GAAG,IAAIC,eAAJ,EAAnB;;IACA,MAAMC,SAAS,GAAG,MAAMC,YAAN,IAAuB;MACrCb,YAAY,CAAC,IAAD,CAAZ;;MACA,IAAI;QACA,MAAMc,GAAG,GAAG,MAAMC,KAAK,CAACpB,GAAD,EAAM,EAAC,GAAGkB,YAAJ;UAAkBG,MAAM,EAAEN,UAAU,CAACM;QAArC,CAAN,CAAvB;;QACA,IAAI,CAACF,GAAG,CAACG,EAAT,EAAa;UACT,MAAM,IAAIC,KAAJ,CAAUJ,GAAG,CAACK,UAAd,CAAN;QACH;;QACD,MAAMtB,IAAI,GAAG,MAAMiB,GAAG,CAACM,IAAJ,EAAnB;QACApB,YAAY,CAAC,KAAD,CAAZ;QACAF,OAAO,CAACD,IAAD,CAAP;QACAK,QAAQ,CAAC,IAAD,CAAR;MACH,CATD,CAUA,OAAOmB,CAAP,EAAU;QACN,IAAIA,CAAC,CAACC,IAAF,KAAW,YAAf,EAA6B;UACzBC,OAAO,CAACC,GAAR,CAAY,uBAAZ;QACH,CAFD,MAGK;UACDxB,YAAY,CAAC,KAAD,CAAZ;UACAE,QAAQ,CAAC,0BAAD,CAAR;QACH;MACJ;IACJ,CArBD;;IAsBA,IAAIN,MAAM,KAAK,KAAf,EAAsB;MAClBgB,SAAS;IACZ;;IACD,IAAIhB,MAAM,KAAK,MAAX,IAAqBO,OAAzB,EAAkC;MAC9BS,SAAS,CAACT,OAAD,CAAT;IACH;;IAED,OAAO,MAAM;MAACO,UAAU,CAACe,KAAX;IAAmB,CAAjC;EACH,CAhCQ,EAgCN,CAAC9B,GAAD,EAAMC,MAAN,EAAcO,OAAd,CAhCM,CAAT;EAkCA,OAAO;IAACN,IAAD;IAAOE,SAAP;IAAkBE,KAAlB;IAAyBI;EAAzB,CAAP;AACH,CApDM;;GAAMX,Q"},"metadata":{},"sourceType":"module"}