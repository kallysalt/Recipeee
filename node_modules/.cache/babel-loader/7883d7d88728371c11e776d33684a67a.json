{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nexport const useFetch = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const controller = new AbortController();\n\n    const fetchData = async () => {\n      setIsPending(true);\n\n      try {\n        const res = await fetch(url, {\n          signal: controller.signal\n        });\n\n        if (!res.ok) {\n          throw new Error(res.statusText);\n        }\n\n        const data = await res.json();\n        setIsPending(false);\n        setData(data);\n        setError(null);\n      } catch (err) {\n        if (err.name === \"AbortError\") {\n          console.log(\"the fetch was aborted\");\n        } else {\n          setIsPending(false);\n          setError('Could not fetch the data');\n        }\n      }\n    };\n\n    fetchData();\n    return () => {\n      controller.abort();\n    };\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n\n_s(useFetch, \"Nv+1/iI0zq+2TB3Cnf0Mf/1lILU=\");","map":{"version":3,"names":["useState","useEffect","useFetch","url","data","setData","isPending","setIsPending","error","setError","controller","AbortController","fetchData","res","fetch","signal","ok","Error","statusText","json","err","name","console","log","abort"],"sources":["/Users/zhubozhou/Documents/github/recipeee/src/hooks/useFetch.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\n\nexport const useFetch = (url) => {\n  const [data, setData] = useState(null)\n  const [isPending, setIsPending] = useState(false)\n  const [error, setError] = useState(null)\n\n  useEffect(() => {\n    const controller = new AbortController()\n\n    const fetchData = async () => {\n      setIsPending(true)\n      \n      try {\n        const res = await fetch(url, { signal: controller.signal })\n        if(!res.ok) {\n          throw new Error(res.statusText)\n        }\n        const data = await res.json()\n\n        setIsPending(false)\n        setData(data)\n        setError(null)\n      } catch (err) {\n        if (err.name === \"AbortError\") {\n          console.log(\"the fetch was aborted\")\n        } else {\n          setIsPending(false)\n          setError('Could not fetch the data')\n        }\n      }\n    }\n\n    fetchData()\n\n    return () => {\n      controller.abort()\n    }\n\n  }, [url])\n\n  return { data, isPending, error }\n}\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,MAAMC,QAAQ,GAAIC,GAAD,IAAS;EAAA;;EAC/B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;EACA,MAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMS,UAAU,GAAG,IAAIC,eAAJ,EAAnB;;IAEA,MAAMC,SAAS,GAAG,YAAY;MAC5BL,YAAY,CAAC,IAAD,CAAZ;;MAEA,IAAI;QACF,MAAMM,GAAG,GAAG,MAAMC,KAAK,CAACX,GAAD,EAAM;UAAEY,MAAM,EAAEL,UAAU,CAACK;QAArB,CAAN,CAAvB;;QACA,IAAG,CAACF,GAAG,CAACG,EAAR,EAAY;UACV,MAAM,IAAIC,KAAJ,CAAUJ,GAAG,CAACK,UAAd,CAAN;QACD;;QACD,MAAMd,IAAI,GAAG,MAAMS,GAAG,CAACM,IAAJ,EAAnB;QAEAZ,YAAY,CAAC,KAAD,CAAZ;QACAF,OAAO,CAACD,IAAD,CAAP;QACAK,QAAQ,CAAC,IAAD,CAAR;MACD,CAVD,CAUE,OAAOW,GAAP,EAAY;QACZ,IAAIA,GAAG,CAACC,IAAJ,KAAa,YAAjB,EAA+B;UAC7BC,OAAO,CAACC,GAAR,CAAY,uBAAZ;QACD,CAFD,MAEO;UACLhB,YAAY,CAAC,KAAD,CAAZ;UACAE,QAAQ,CAAC,0BAAD,CAAR;QACD;MACF;IACF,CArBD;;IAuBAG,SAAS;IAET,OAAO,MAAM;MACXF,UAAU,CAACc,KAAX;IACD,CAFD;EAID,CAhCQ,EAgCN,CAACrB,GAAD,CAhCM,CAAT;EAkCA,OAAO;IAAEC,IAAF;IAAQE,SAAR;IAAmBE;EAAnB,CAAP;AACD,CAxCM;;GAAMN,Q"},"metadata":{},"sourceType":"module"}