{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nexport const useFetch = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const controller = new AbortController();\n\n    const fetchData = async () => {\n      setIsPending(true);\n\n      try {\n        const res = await fetch(url, {\n          signal: controller.signal\n        });\n\n        if (!res.ok) {\n          throw new Error(res.statusText);\n        }\n\n        const data = await res.json();\n        setIsPending(false);\n        setData(data);\n        setError(null);\n      } catch {\n        if (err.name === \"AbortError\") {\n          console.log(\"the fetch was aborted\");\n        } else {\n          setIsPending(false);\n          setError('failed to fetch the data');\n        }\n      }\n    };\n\n    fetchData();\n    return () => {\n      controller.abort();\n    };\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n\n_s(useFetch, \"5ItwRkPMxIA8FTQohSZUul9wkyw=\");","map":{"version":3,"names":["useState","useEffect","useFetch","url","data","setData","isPending","setIsPending","error","setError","controller","AbortController","fetchData","res","fetch","signal","ok","Error","statusText","json","err","name","console","log","abort"],"sources":["/Users/zhubozhou/Documents/github/recipeee/src/hooks/useFetch.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport const useFetch = (url) => {\n\n    const [data,setData] = useState(null)\n    const [isPending, setIsPending] = useState(false)\n    const [error, setError] = useState(null)\n\n    useEffect(() => {\n        const controller = new AbortController()\n\n        const fetchData = async() => {\n            setIsPending(true)\n            try {\n                const res = await fetch(url, {signal: controller.signal})\n                if (!res.ok) {\n                    throw new Error(res.statusText)\n                }\n                const data = await res.json()\n                setIsPending(false)\n                setData(data)\n                setError(null)\n            }\n            catch {\n                if (err.name ===\"AbortError\") {\n                    console.log(\"the fetch was aborted\")\n                }\n                else {\n                    setIsPending(false)\n                    setError('failed to fetch the data')\n                }\n            }\n        }\n\n        fetchData()\n        return () => {controller.abort()}\n    }, [url])\n    \n    return {data, isPending, error}\n}\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,MAAMC,QAAQ,GAAIC,GAAD,IAAS;EAAA;;EAE7B,MAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBL,QAAQ,CAAC,IAAD,CAA/B;EACA,MAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;EAEAC,SAAS,CAAC,MAAM;IACZ,MAAMS,UAAU,GAAG,IAAIC,eAAJ,EAAnB;;IAEA,MAAMC,SAAS,GAAG,YAAW;MACzBL,YAAY,CAAC,IAAD,CAAZ;;MACA,IAAI;QACA,MAAMM,GAAG,GAAG,MAAMC,KAAK,CAACX,GAAD,EAAM;UAACY,MAAM,EAAEL,UAAU,CAACK;QAApB,CAAN,CAAvB;;QACA,IAAI,CAACF,GAAG,CAACG,EAAT,EAAa;UACT,MAAM,IAAIC,KAAJ,CAAUJ,GAAG,CAACK,UAAd,CAAN;QACH;;QACD,MAAMd,IAAI,GAAG,MAAMS,GAAG,CAACM,IAAJ,EAAnB;QACAZ,YAAY,CAAC,KAAD,CAAZ;QACAF,OAAO,CAACD,IAAD,CAAP;QACAK,QAAQ,CAAC,IAAD,CAAR;MACH,CATD,CAUA,MAAM;QACF,IAAIW,GAAG,CAACC,IAAJ,KAAY,YAAhB,EAA8B;UAC1BC,OAAO,CAACC,GAAR,CAAY,uBAAZ;QACH,CAFD,MAGK;UACDhB,YAAY,CAAC,KAAD,CAAZ;UACAE,QAAQ,CAAC,0BAAD,CAAR;QACH;MACJ;IACJ,CArBD;;IAuBAG,SAAS;IACT,OAAO,MAAM;MAACF,UAAU,CAACc,KAAX;IAAmB,CAAjC;EACH,CA5BQ,EA4BN,CAACrB,GAAD,CA5BM,CAAT;EA8BA,OAAO;IAACC,IAAD;IAAOE,SAAP;IAAkBE;EAAlB,CAAP;AACH,CArCM;;GAAMN,Q"},"metadata":{},"sourceType":"module"}